# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env: 
  REGISTERY: eu.gcr.io/flyte-sandbox-342013/flytelab
  PROJECT_NAME: adorable-unicorns-23
  PROJECT_PATH : projects/whats_cooking_good_looking

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get tags
        id: tags
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M-%S')"
          foo=${{ github.ref }}
          branch_name=${foo#refs/heads/}
          branch_slug=${branch_name/\//-}
          echo "::set-output name=tag::$branch_slug"
      
      - name: is preprod
        id: is-preprod
        env:
          main: main
        run: | 
          if [ "${{ steps.tags.outputs.tag }}" = "main" ];then 
              echo "::set-output name=domain::staging"
              echo "::set-output name=tag::${{ steps.tags.outputs.date }}" 
            else 
              echo "::set-output name=domain::development"
              echo "::set-output name=tag::${{steps.tags.outputs.tag}}-${{steps.tags.outputs.date}}" 
          fi

      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: docker build ${{ env.PROJECT_PATH }}/. --file ${{ env.PROJECT_PATH }}/Dockerfile --build-arg config=.flyte/remote-config.yaml --build-arg image=${{env.REGISTERY}}:${{steps.is-preprod.outputs.tag}} --build-arg creds=${{secrets.RUNNER_KEY}} --tag ${{env.REGISTERY}}:${{steps.is-preprod.outputs.tag}}
      
      - uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: flyte-sandbox-342013
          export_default_credentials: true
      
      - run: gcloud auth configure-docker -q

      - name: Push the Docker image
        run: docker push ${{env.REGISTERY}}:${{steps.is-preprod.outputs.tag}}

      - name: serialize
        uses: louisRDSC/FlyteSerializeAction@v1.2
        with: 
          config: ${{ env.PROJECT_PATH }}/.flyte/remote.config
          tag: ${{env.REGISTERY}}:${{steps.is-preprod.outputs.tag}}
          requirements: ${{ env.PROJECT_PATH }}/requirements.txt
          pkgs : whats_cooking_good_looking
          source: ${{ env.PROJECT_PATH }}/
          

      - name: Register
        uses: louisRDSC/FlyteRegisterAction@v1.3
        with:
          project: ${{ env.PROJECT_NAME }}
          config: ${{ env.PROJECT_PATH }}/.flyte/remote-config.yaml
          domain: ${{ steps.is-preprod.outputs.domain }}
          package: ${{ env.PROJECT_PATH }}/flyte-package.tgz
          version: ${{ steps.is-preprod.outputs.tag }}
          clientId: ${{ secrets.CLIENT_ID }}
          clientSecret: ${{ secrets.CLIENT_SECRET }}

